{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": " API",
        "description": "IKFL Swagger API DOCS",
        "license": {
            "name": "IKFL"
        }
    },
    "host": "",
    "basePath": "/api",
    "tags": [
        {
            "name": "IKFL Workspace Server",
            "description": "API for Workspace"
        }
    ],
    "schemes": ["https", "http"],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/order": {
            "get": {
                "tags": ["order"],
                "summary": "Fetch all order request",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "No record found!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "order record",
                        "schema": {
                            "$ref": "#/response/record-order"
                        }
                    }
                }
            }
        },
        "/service": {
            "post": {
                "tags": ["Service"],
                "summary": "Creating A Professional service ",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Creating A service ",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/create-service"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Request Send Successfully",
                        "schema": {
                            "$ref": "#/response/create-service"
                        }
                    }
                }
            },
            "get": {
                "tags": ["Service"],
                "summary": "Fetch all service request",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "No record found!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "service record",
                        "schema": {
                            "$ref": "#/response/record-service"
                        }
                    }
                }
            }
        },
        "/service/{id}": {
            "put": {
                "tags": ["Service"],
                "summary": "service details update",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "service id need be specified",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updating an service account",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/update-service"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "service updated Successfully",
                        "schema": {
                            "$ref": "#/response/update-service"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Service"],
                "summary": "Deleting a service record",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "service id need be specified",
                        "required": true
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "service deleted Successfully"
                    }
                }
            }
        },
        "/tags": {
            "post": {
                "tags": ["tags"],
                "summary": "Creating A Tags ",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Creating A Tags ",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/create-tags"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Request Send Successfully",
                        "schema": {
                            "$ref": "#/response/create-tags"
                        }
                    }
                }
            },
            "get": {
                "tags": ["tags"],
                "summary": "Fetch all tags request",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "No record found!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "tags record",
                        "schema": {
                            "$ref": "#/response/record-tags"
                        }
                    }
                }
            }
        },
        "/tags/{id}": {
            "put": {
                "tags": ["tags"],
                "summary": "tags details update",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "tags id need be specified",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updating an tags ",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/update-tags"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "tags updated Successfully",
                        "schema": {
                            "$ref": "#/response/update-tags"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["tags"],
                "summary": "Deleting a tags record",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "tags id need be specified",
                        "required": true
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "tags deleted Successfully"
                    }
                }
            }
        },
        "/promotion": {
            "post": {
                "tags": ["Promotion"],
                "summary": "Creating Promotion ",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Creating A Promotion ",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/create-promotion"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Request Send Successfully",
                        "schema": {
                            "$ref": "#/response/create-promotion"
                        }
                    }
                }
            },
            "get": {
                "tags": ["Promotion"],
                "summary": "Fetch all Promotion",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "No record found!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Wishlist record",
                        "schema": {
                            "$ref": "#/response/get-promotion"
                        }
                    }
                }
            }
           
        },
        "/promotion/{id}": {
            "put": {
                "tags": ["Promotion"],
                "summary": "promotion details update",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "promotion id need be specified",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updating an promotion account",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/update-promotion"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "promotion updated Successfully",
                        "schema": {
                            "$ref": "#/response/update-promotion"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Promotion"],
                "summary": "Deleting a promotion record",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "promotion id need be specified",
                        "required": true
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "promotion deleted Successfully"
                    }
                }
            }
        },
        "/service/enquiry": {
            "post": {
                "tags": ["Service Enquiry"],
                "summary": "Creating Service Enquiry ",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Creating A Service Enquiry ",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/create-service-enquiry"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Request Send Successfully",
                        "schema": {
                            "$ref": "#/response/create-service-enquiry"
                        }
                    }
                }
            },
            "get": {
                "tags": ["Service Enquiry"],
                "summary": "Fetch all service enquiry",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "No record found!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "service enquiry record",
                        "schema": {
                            "$ref": "#/response/record-service-enquiry"
                        }
                    }
                }
            }
        },
        "/connections": {
            "post": {
                "tags": ["connections"],
                "summary": "Creating A connections ",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Creating A connections ",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/create-connections"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Request Send Successfully",
                        "schema": {
                            "$ref": "#/response/create-connections"
                        }
                    }
                }
            },
            "get": {
                "tags": ["connections"],
                "summary": "Fetch all connections request",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "No record found!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "connections record",
                        "schema": {
                            "$ref": "#/response/record-connections"
                        }
                    }
                }
            }
        },
        "/connections/{id}": {
            "put": {
                "tags": ["connections"],
                "summary": "connections details update",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "connections id need be specified",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updating an connections ",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/update-connections"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "connections updated Successfully"
                    }
                }
            }
            
        },
        "/userPosts": {
            "post": {
                "tags": ["USER_POSTS"],
                "summary": "Posting a user feed",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Posting a user feed",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/user-posts"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Request Send Successfully",
                        "schema": {
                            "$ref": "#/response/user-posts"
                        }
                    }
                }
            },
            "get": {
                "tags": ["USER_POSTS"],
                "summary": "Fetch all user feeds",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "No record found!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "User post record",
                        "schema": {
                            "$ref": "#/response/user-posts"
                        }
                    }
                }
            }
        },
        "/userPosts/{id}": {
            "put": {
                "tags": ["USER_POSTS"],
                "summary": "Update user posts",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "User post id need be specified",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updating an user post",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/update-user-posts"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "User post updated Successfully"
                    }
                }
            },
            "delete": {
                "tags": ["USER_POSTS"],
                "summary": "Deleting a user feed record",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "User post id need be specified",
                        "required": true
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "User post deleted Successfully"
                    }
                }
            }
        },
        "/review": {
            "post": {
                "tags": ["REVIEW"],
                "summary": "Providing a review for Product/Service",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Providing a review",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/post-review"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Request Send Successfully",
                        "schema": {
                            "$ref": "#/response/post-review"
                        }
                    }
                }
            },
            "get": {
                "tags": ["REVIEW"],
                "summary": "Fetch all user reviews",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "No record found!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Review record",
                        "schema": {
                            "$ref": "#/response/post-review"
                        }
                    }
                }
            }
        },
        "/review/{id}": {
            "put": {
                "tags": ["REVIEW"],
                "summary": "Update user review",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "User review id need be specified",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updating an user post",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/update-review"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "User review updated Successfully"
                    }
                }
            },
            "delete": {
                "tags": ["REVIEW"],
                "summary": "Deleting a user review record",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "User review id need be specified",
                        "required": true
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "User review deleted Successfully"
                    }
                }
            }
        },
        "/help": {
            "post": {
                "tags": ["Help"],
                "summary": "Professional Help Request To Admin",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Creating A Help Request To Admin",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/create-help"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Request Send Successfully",
                        "schema": {
                            "$ref": "#/response/create-help"
                        }
                    }
                }
            },
            "get": {
                "tags": ["Help"],
                "summary": "Fetch all help request",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "No record found!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Help record",
                        "schema": {
                            "$ref": "#/response/record-help"
                        }
                    }
                }
            }
        },
        "/help/{id}": {
            "put": {
                "tags": ["Help"],
                "summary": "Help details update",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Help id need be specified",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updating an Help account",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/update-help"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Help updated Successfully",
                        "schema": {
                            "$ref": "#/response/update-help"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Help"],
                "summary": "Deleting a Help record",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Help id need be specified",
                        "required": true
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Help deleted Successfully"
                    }
                }
            }
        },
        "/attribute": {
            "post": {
                "tags": ["ATTRIBUTE"],
                "summary": "Attribute record creation with list",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Creating A Attribute record",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/create-attribute"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Attribute created successfully",
                        "schema": {
                            "$ref": "#/response/create-attribute"
                        }
                    }
                }
            },
            "get": {
                "tags": ["ATTRIBUTE"],
                "summary": "Fetch all attribute records",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "No record found!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Help record",
                        "schema": {
                            "$ref": "#/response/create-attribute"
                        }
                    }
                }
            }
        },
        "/attribute/{id}": {
            "put": {
                "tags": ["ATTRIBUTE"],
                "summary": "Help details update",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Attribute id need be specified",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updating an Attribute record",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/update-attribute"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Attribute record updated Successfully"
                    }
                }
            },
            "delete": {
                "tags": ["ATTRIBUTE"],
                "summary": "Deleting a Attribute record",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Attribute id need be specified",
                        "required": true
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Attribute deleted Successfully"
                    }
                }
            }
        },
        "/user/wishlist": {
            "post": {
                "tags": ["Wishlist"],
                "summary": "Creating Wishlist ",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Creating A Wishlist ",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/create-wishlist"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Request Send Successfully",
                        "schema": {
                            "$ref": "#/response/create-wishlist"
                        }
                    }
                }
            },
            "get": {
                "tags": ["Wishlist"],
                "summary": "Fetch all Wishlist",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "No record found!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Wishlist record",
                        "schema": {
                            "$ref": "#/response/get-wishlist"
                        }
                    }
                }
            },
            "put": {
                "tags": ["Wishlist"],
                "summary": "Remove Wishlist",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Remove Wishlist",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/update-wishlist"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Wishlist record updated Successfully"
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "tags": ["USER"],
                "summary": "User login",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User credentails for login",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/user-login"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "ERROR!"
                                },
                                "error": {
                                    "type": "string",
                                    "example": "Invalid credentails!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "User login successfully",
                        "schema": {
                            "$ref": "#/response/user-login"
                        }
                    }
                }
            }
        },
        "/user/mobile/login": {
            "post": {
                "tags": ["USER"],
                "summary": "User login",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Mobile number for OTP login",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/mobile-login"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "ERROR!"
                                },
                                "error": {
                                    "type": "string",
                                    "example": "Invalid credentails!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OTP sent successfully",
                        "schema": {
                            "$ref": "#/response/mobile-login"
                        }
                    }
                }
            }
        },
        "/user/resend/otp": {
            "post": {
                "tags": ["USER"],
                "summary": "User resend otp",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Resend user OTP",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/resend-otp"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "ERROR!"
                                },
                                "error": {
                                    "type": "string",
                                    "example": "Invalid details!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Please check your resend OTP on your mobile!"
                    }
                }
            }
        },
        "/user/verify/otp": {
            "post": {
                "tags": ["USER"],
                "summary": "User verify otp",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User otp verification",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/verify-otp"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "ERROR!"
                                },
                                "error": {
                                    "type": "string",
                                    "example": "Invalid details!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Authentication successfull",
                        "schema": {
                            "$ref": "#/response/user-login"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "tags": ["USER"],
                "summary": "User registration",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Mobile number for OTP signup",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/mobile-login"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "ERROR!"
                                },
                                "error": {
                                    "type": "string",
                                    "example": "User already exists!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OTP sent successfully"
                    }
                }
            },
            "get": {
                "tags": ["USER"],
                "summary": "User records",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "ERROR!"
                                },
                                "error": {
                                    "type": "string",
                                    "example": "No records found!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "User records",
                        "schema": {
                            "$ref": "#/response/user-list"
                        }
                    }
                }
            },
            "put": {
                "tags": ["USER"],
                "summary": "User details update",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updating an user account",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/update-user"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "ERROR!"
                                },
                                "error": {
                                    "type": "string",
                                    "example": "Validation errors!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "User updated Successfully"
                    }
                }
            }
        },
        "/user/logout": {
            "get": {
                "tags": ["USER"],
                "summary": "User logout",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "ERROR!"
                                },
                                "error": {
                                    "type": "string",
                                    "example": "No user found!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "User logout successfully"
                    }
                }
            }
        },
        "/user/validate/userName": {
            "post": {
                "tags": ["USER"],
                "summary": "Validating unique User Name",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Validating user name",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/validate-userName"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "ERROR!"
                                },
                                "error": {
                                    "type": "string",
                                    "example": "User name already exists!"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "User name is available!"
                    }
                }
            }
        },
        "/user/validate/email": {
            "post": {
                "tags": ["USER"],
                "summary": "Validating user email id",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Validating user name",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/validate-email"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "ERROR!"
                                },
                                "error": {
                                    "type": "string",
                                    "example": "Email already exists!"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Email is available!"
                    }
                }
            }
        },
        "/user/upload/profile": {
            "post": {
                "tags": ["USER"],
                "summary": "User profile image upload",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "file",
                        "description": "",
                        "required": false,
                        "type": "file"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "ERROR!"
                                },
                                "error": {
                                    "type": "string",
                                    "example": "Please select a file!"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "User profile uploaded Successfully",
                        "schema": {
                            "$ref": "#/response/upload-user-profile"
                        }
                    }
                }
            }
        },
        "/user/categories": {
            "get": {
                "tags": ["USER"],
                "summary": "Get User categories list",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "ERROR!"
                                },
                                "error": {
                                    "type": "string",
                                    "example": "User id is required!"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "User categories list",
                        "schema": {
                            "$ref": "#/response/user-categories"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "delete": {
                "tags": ["USER"],
                "summary": "Deleting a user record",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id need be specified.",
                        "required": true,
                        "default": "5f8a29b4ed2e4f648e37c631"
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "ERROR!"
                                },
                                "error": {
                                    "type": "string",
                                    "example": "Validation errors!"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "User deleted Successfully"
                    }
                }
            }
        },
        "/role": {
            "post": {
                "tags": ["ROLE"],
                "summary": "Match details creation",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Creating an account for match",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/create-match"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Match created Successfully",
                        "schema": {
                            "$ref": "#/response/create-match"
                        }
                    }
                }
            },
            "get": {
                "tags": ["ROLE"],
                "summary": "Match record",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "No record found!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Match record",
                        "schema": {
                            "$ref": "#/response/record-match"
                        }
                    }
                }
            }
        },
        "/role/{id}": {
            "put": {
                "tags": ["ROLE"],
                "summary": "Match details update",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Match id need be specified",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updating an match account",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/update-match"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Match updated Successfully",
                        "schema": {
                            "$ref": "#/response/update-match"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["ROLE"],
                "summary": "Deleting a match record",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Match id need be specified",
                        "required": true
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Match deleted Successfully"
                    }
                }
            }
        },
        "/company": {
            "post": {
                "tags": ["COMPANY"],
                "summary": "Player Match details creation",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Creating an account for Player Match",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/create-playerMatch"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Player Match created Successfully",
                        "schema": {
                            "$ref": "#/response/create-playerMatch"
                        }
                    }
                }
            },
            "get": {
                "tags": ["COMPANY"],
                "summary": "Player Match record",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "No record found!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Player Match record",
                        "schema": {
                            "$ref": "#/response/record-playerMatch"
                        }
                    }
                }
            }
        },
        "/company/{id}": {
            "put": {
                "tags": ["COMPANY"],
                "summary": "Player Match details update",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Player Match id need be specified",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updating an playerMatch account",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/update-playerMatch"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Player Match updated Successfully",
                        "schema": {
                            "$ref": "#/response/update-playerMatch"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["COMPANY"],
                "summary": "Deleting a playerMatch record",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Player Match id need be specified",
                        "required": true
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Player Match deleted Successfully"
                    }
                }
            }
        },
        "/file": {
            "get": {
                "tags": ["FILE"],
                "summary": "Tournament record",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "No record found!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Tournament record",
                        "schema": {
                            "$ref": "#/response/record-tournament"
                        }
                    }
                }
            }
        },
        "/file/{id}": {
            "delete": {
                "tags": ["FILE"],
                "summary": "Deleting a tournament record",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Tournament id need be specified",
                        "required": true
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Tournament deleted Successfully"
                    }
                }
            }
        },
        "/notification": {
            "post": {
                "tags": ["NOTIFICATION"],
                "summary": "Notification details creation",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Creating an account for notification",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/create-notification"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Notification created Successfully",
                        "schema": {
                            "$ref": "#/response/create-notification"
                        }
                    }
                }
            },
            "get": {
                "tags": ["NOTIFICATION"],
                "summary": "Notification record",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "No record found!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Notification record",
                        "schema": {
                            "$ref": "#/response/record-notification"
                        }
                    }
                }
            }
        },
        "/notification/{id}": {
            "put": {
                "tags": ["NOTIFICATION"],
                "summary": "Notification details update",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Notification id need be specified",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updating an notification account",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/update-notification"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Notification updated Successfully",
                        "schema": {
                            "$ref": "#/response/update-notification"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["NOTIFICATION"],
                "summary": "Deleting a notification record",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Notification id need be specified",
                        "required": true
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Notification deleted Successfully"
                    }
                }
            }
        },
        "/logs": {
            "post": {
                "tags": ["LOGS"],
                "summary": "Log details creation",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Creating an account for log",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/create-log"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Log created Successfully",
                        "schema": {
                            "$ref": "#/response/create-log"
                        }
                    }
                }
            },
            "get": {
                "tags": ["LOGS"],
                "summary": "Log record",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "No record found!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Log record",
                        "schema": {
                            "$ref": "#/response/record-log"
                        }
                    }
                }
            }
        },
        "/logs/{id}": {
            "put": {
                "tags": ["LOGS"],
                "summary": "Log details update",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Log id need be specified",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updating an log account",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/update-log"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Log updated Successfully",
                        "schema": {
                            "$ref": "#/response/update-log"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["LOGS"],
                "summary": "Deleting a log record",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Log id need be specified",
                        "required": true
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Log deleted Successfully"
                    }
                }
            }
        },
        "/category": {
            "post": {
                "tags": ["CATEGORY"],
                "summary": "Category created successfully",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Creating category",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/create-category"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Category created Successfully",
                        "schema": {
                            "$ref": "#/response/create-category"
                        }
                    }
                }
            },
            "get": {
                "tags": ["CATEGORY"],
                "summary": "category record",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "page no",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "limit of a record..By default 20",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "key",
                        "description": "search on category name",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "_id",
                        "description": "details of a category",
                        "required": false
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "No record found!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Category record",
                        "schema": {
                            "$ref": "#/response/create-category"
                        }
                    }
                }
            }
        },
        "/category/{id}": {
            "put": {
                "tags": ["CATEGORY"],
                "summary": "category details update",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "category id need be specified",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updating category",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/create-category"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "category updated Successfully",
                        "schema": {
                            "$ref": "#/response/create-category"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["CATEGORY"],
                "summary": "Deleting a category",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "category id need be specified",
                        "required": true
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "category deleted Successfully"
                    }
                }
            }
        },
        "/discount": {
            "post": {
                "tags": ["Discount"],
                "summary": "Create Discount Request",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    },
					{
                        "in": "body",
                        "name": "body",
                        "description": "Creating A Discount Request",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/create-discount"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Request Send Successfully",
                        "schema": {
                            "$ref": "#/response/create-discount"
                        }
                    }
                }
            },
            "get": {
                "tags": ["Discount"],
                "summary": "Fetch all discount request",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "No record found!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "discount record",
                        "schema": {
                            "$ref": "#/response/record-discount"
                        }
                    }
                }
            }
        },
        "/discount/{id}": {
            "put": {
                "tags": ["Discount"],
                "summary": "discount details update",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "discount id need be specified",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updating an discount account",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/update-discount"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "discount updated Successfully",
                        "schema": {
                            "$ref": "#/response/update-discount"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Discount"],
                "summary": "Deleting a discount record",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "discount id need be specified",
                        "required": true
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "discount deleted Successfully"
                    }
                }
            }
        },
        "/subcategory": {
            "post": {
                "tags": ["SUBCATEGORY"],
                "summary": "Sub category created successfully",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Creating sub category",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/create-subcategory"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Sub category created Successfully",
                        "schema": {
                            "$ref": "#/response/create-subcategory"
                        }
                    }
                }
            },
            "get": {
                "tags": ["SUBCATEGORY"],
                "summary": "sub category record",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "page no",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "limit of a record..By default 10",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "key",
                        "description": "search on sub category name",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "_id",
                        "description": "details of a sub category",
                        "required": false
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "No record found!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Sub category record",
                        "schema": {
                            "$ref": "#/response/create-subcategory"
                        }
                    }
                }
            }
        },
        "/subcategory/{id}": {
            "put": {
                "tags": ["SUBCATEGORY"],
                "summary": "sub category details update",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "sub category id need be specified",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updating sub category",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/create-subcategory"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "sub category updated Successfully",
                        "schema": {
                            "$ref": "#/response/create-subcategory"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["SUBCATEGORY"],
                "summary": "Deleting a sub category",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "sub category id need be specified",
                        "required": true
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "category deleted Successfully"
                    }
                }
            }
        },
        "/product": {
            "post": {
                "tags": ["Product"],
                "summary": "Create Product Request",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    },
					{
                        "in": "body",
                        "name": "body",
                        "description": "Creating A Product Request",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/create-product"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Request Send Successfully",
                        "schema": {
                            "$ref": "#/response/create-product"
                        }
                    }
                }
            },
            "get": {
                "tags": ["Product"],
                "summary": "Fetch all product request",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "No record found!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "product record",
                        "schema": {
                            "$ref": "#/response/record-product"
                        }
                    }
                }
            }
        },
        "/product/{id}": {
            "put": {
                "tags": ["Product"],
                "summary": "product details update",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "product id need be specified",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updating an product account",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/update-product"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "product updated Successfully",
                        "schema": {
                            "$ref": "#/response/update-product"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Product"],
                "summary": "Deleting a product record",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "product id need be specified",
                        "required": true
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "product deleted Successfully"
                    }
                }
            }
        },
        "/group": {
            "post": {
                "tags": ["Group"],
                "summary": "Create Group Request",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    },
					{
                        "in": "body",
                        "name": "body",
                        "description": "Creating A Group Request",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/create-group"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Request Send Successfully",
                        "schema": {
                            "$ref": "#/response/create-group"
                        }
                    }
                }
            },
            "get": {
                "tags": ["Group"],
                "summary": "Fetch all group request",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "No record found!"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "group record",
                        "schema": {
                            "$ref": "#/response/record-group"
                        }
                    }
                }
            }
        },
        "/group/{id}": {
            "put": {
                "tags": ["Group"],
                "summary": "group details update",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "group id need be specified",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updating an group account",
                        "required": true,
                        "schema": {
                            "$ref": "#/request/update-group"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "group updated Successfully",
                        "schema": {
                            "$ref": "#/response/update-group"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Group"],
                "summary": "Deleting a group",
                "description": "",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "group id need be specified",
                        "required": true
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid Object"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation errors"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "group deleted Successfully"
                    }
                }
            }
        }
    },
    "request": {
        "user-login": {
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "123567890"
                }
            }
        },
        "mobile-login": {
            "properties": {
                "email": {
                    "type": "number",
                    "example": "some@one.com"
                },
                "role": {
                    "type": "string",
                    "example": "62029e5b110c0ceb181f3a3b"
                }
            }
        },
        "resend-otp": {
            "properties": {
                "email": {
                    "type": "number",
                    "example": "some@one.com"
                },
                "role": {
                    "type": "string",
                    "example": "62029e5b110c0ceb181f3a3b"
                }
            }
        },
        "verify-otp": {
            "properties": {
                "token": {
                    "type": "number",
                    "example": 123434
                },
                "email": {
                    "type": "number",
                    "example": "some@one.com"
                }
            }
        },
        "update-user": {
            "properties": {
                "userName": {
                    "type": "string",
                    "example": "DoctorTest"
                },
                "firstName": {
                    "type": "string",
                    "example": "Doctor"
                },
                "lastName": {
                    "type": "string",
                    "example": "Test"
                },
                "location": {
                    "type": "string",
                    "example": "{}"
                }
            }
        },
        "validate-userName": {
            "properties": {
                "userName": {
                    "type": "string",
                    "example": "DoctorTest"
                }
            }
        },
        "validate-email": {
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@email.com"
                }
            }
        },
        "post-review": {
            "properties": {
                "product": { 
                    "type": "string",
                    "example": "6203faae6a34645934dda722" 
                },
                "service": { 
                    "type": "string",
                    "example": "6203faae6a34645934dda722" 
                },
                "rating": { 
                    "type": "number",
                    "example": 3.8 
                },
                "feedback": { 
                    "type": "string",
                    "example": "Anything" 
                },
                "comments": {
                    "properties": {
                        "comment": { 
                            "type": "string",
                            "example": "Anything" 
                        },
                        "commentedBy": { 
                            "type": "string",
                            "example": "User_id" 
                        }
                    }
                },
                "files": {
                    "type": "Multiple Files",
                    "example": "['aa.png', 'bb.png']"
                }
            }
        },
        "update-review": {
            "properties": {
                "_id": { 
                    "type": "string",
                    "example": "6203faae6a34645934dda722" 
                },
                "product": { 
                    "type": "string",
                    "example": "6203faae6a34645934dda722" 
                },
                "service": { 
                    "type": "string",
                    "example": "6203faae6a34645934dda722" 
                },
                "approvedBy": { 
                    "type": "string",
                    "example": "6203faae6a34645934dda722" 
                },
                "rating": { 
                    "type": "number",
                    "example": 3.8 
                },
                "feedback": { 
                    "type": "string",
                    "example": "Anything" 
                },
                "comments": {
                    "properties": {
                        "comment": { 
                            "type": "string",
                            "example": "Anything" 
                        },
                        "commentedBy": { 
                            "type": "string",
                            "example": "User_id" 
                        }
                    }
                },
                "files": {
                    "type": "Multiple Files",
                    "example": "['aa.png', 'bb.png']"
                }
            }
        },
        "user-posts": {
            "properties": {
                "name": { 
                    "type": "string",
                    "example": "Men" 
                },
                "files": {
                    "type": "Multiple Files",
                    "example": "['aa.png', 'bb.png']"
                },
                "postingType": { 
                    "type": "string",
                    "example": "GROUP/INDIVIDUAL" 
                },
                "content": { 
                    "type": "string",
                    "example": "Anything" 
                },
                "type": { 
                    "type": "string", 
                    "example": "TEXT/IMAGE/VIDEO"
                }
            }
        },
        "create-attribute": {
            "properties": {
                "name": { 
                    "type": "string",
                    "example": "KG" 
                },
                "list": {
                    "type": "Multiple Files",
                    "example": "[1, 2, 3, 4]"
                },
                "category": { 
                    "type": "string",
                    "example": "6203faae6a34645934dda722" 
                },
                "active": { 
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "update-attribute": {
            "properties": {
                "_id": { 
                    "type": "string",
                    "example": "6203faae6a34645934dda722" 
                },
                "name": { 
                    "type": "string",
                    "example": "Size" 
                },
                "list": {
                    "type": "Multiple Files",
                    "example": "['XL', 'L', 'S']"
                },
                "category": { 
                    "type": "string",
                    "example": "6203faae6a34645934dda722" 
                },
                "active": { 
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "update-user-posts": {
            "properties": {
                "_id": { 
                    "type": "string",
                    "example": "6203faae6a34645934dda722" 
                },
                "likes": {
                    "properties": {
                        "likedBy": { 
                            "type": "string",
                            "example": "User_id" 
                        },
                        "liked": { 
                            "type": "boolean",
                            "example": true 
                        }
                    }
                },
                "comments": {
                    "properties": {
                        "comment": { 
                            "type": "string",
                            "example": "Anything" 
                        },
                        "commentedBy": { 
                            "type": "string",
                            "example": "User_id" 
                        }
                    }
                }
            }
        },
        "create-category": {
            "properties": {
                "name": { 
                    "type": "string",
                    "example": "Men" 
                },
                "type": { 
                    "type": "string",
                    "example": "kurta" 
                },
                "commision": { 
                    "type": "string",
                    "example": 20 
                },
                "commisionType": { 
                    "type": "string", 
                    "example": "Bronze"
                },
                "active": { 
                    "type": "Boolean",
                    "example": true
                }
            }
        },
        "create-subcategory": {
            "properties": {
                    "category_id": { 
                        "type": "string",
                        "example": "6203faae6a34645934dda722" 
                    },
                    "name": { 
                        "type": "string",
                        "example": "Men" 
                    },
                    "active": { 
                        "type": "Boolean",
                        "example": true
                    }
            }
        },
        "create-notification": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "CALL"
                },
                "device": {
                    "type": "string",
                    "example": "['MOBILE', 'DESKTOP']"
                },
                "message": {
                    "type": "string",
                    "example": "Message what we to sent on devices"
                },
                "userId": {
                    "type": "string",
                    "example": "sd23423asf2saf232sfas"
                }
            }
        },
        "create-log": {
            "properties": {
                "type": {
                    "type": "string",
                    "example": "VOICE_CALL"
                },
                "device": {
                    "type": "string",
                    "example": "MOBILE"
                },
                "duration": {
                    "type": "number",
                    "example": 30
                },
                "userId": {
                    "type": "string",
                    "example": "sd23423asf2saf232sfas"
                }
            }
        },
        "create-wishlist": {
            "properties": {
                "favourites": {
                    "type": "array",
                    "example": "['6231e94a296e1c389ab8097ee']"
                }
            }
        },
        "create-discount": {
            "properties": {
                "couponName": {
                    "type": "string",
                    "example": "10 Rs Promo"
                },
                "couponCode": {
                    "type": "string",
                    "example": "PROMO10"
                },
                "discountType": {
                    "type": "string (PERCENTAGE or AMOUNT)",
                    "example": "PERCENTAGE"
                },
                "value": {
                    "type": "number",
                    "example": "10"
                },
                 "minValue": {
                    "type": "number",
                    "example": "100"
                },                 
                "startDate": {
                    "type": "Number  [UNIX Timestamp]",
                    "example": "1644504950000"
                },
                "endDate": {
                    "type": "Number [UNIX Timestamp]",
                    "example": "1644504950000"
                },
                "products": {
                    "type": "Array object ID from products table",
                    "example": "[62029e5b110c0ceb181f3a3b, 62029e5b110c0ceb181f3a3b]"
                },
                "services": {
                    "type": "Array of object ID from services table",
                    "example": "[62029e5b110c0ceb181f3a3b, 62029e5b110c0ceb181f3a3b]"
                },
                "active": {
                    "type": "Boolean (true or false)",
                    "example": "true"
                }              
            }
        },
        "create-product": {
            "properties": {                  
                "name": {
                    "type": "string",
                    "example": "Product"
                },
                "description": {
                    "type": "string",
                    "example": "utensil Desctiption"
                },
                "files": {
                    "type": "Multiple Files",
                    "example": "['aa.png', 'bb.png']"
                },
                "price": {
                    "type": "number",
                    "example": "10"
                },
                "specialPrice" : {
                    "type": "number",
                    "example": "10"
                },
                "specialPriceStartDate" : {
                    "type": "Number  [UNIX Timestamp]",
                    "example": "1644504950000"
                },
                "specialPriceEndDate" : {
                    "type": "Number [UNIX Timestamp]",
                    "example": "1644504950000"
                },                                
                "category": {
                    "type": "objectId of Category",
                    "example": "61ff7a8c85cb8a97193e4386"
                },
                "subCategory": {
                    "type": "objectId of subCategory",
                    "example": "61ff7a8c85cb8a97193e4386"
                },
                "attributes": {
                    "type": "Array of Attribute object",
                    "example": "[{'type':'Color', 'value': 'Red'}, ...]"
                },                
                "active": {
                    "type": "Boolean (true or false)",
                    "example": "true"
                },
                "createdBy": {
                    "type": "string",
                    "example": "61ff7a8c85cb8a97193e4386"
                }                
            }
        },
        "create-group": {
            "properties": {     
                "name": {
                    "type": "string",
                    "example": "Awesome Group"
                },             
                "users": {
                    "type": "array",
                    "example": "['6231e94a296e1c389ab8097e']"
                },
                "pendingRequest": {
                    "type": "array",
                    "example": "['6231e94a296e1c389ab8097e']"
                },
                "posts": {
                    "type": "array",
                    "example": "['6231e94a296e1c389ab8097e']"
                }             
            }
        },
        "update-connections": {
            "properties": {
                  "_id": {
                    "type": "string",
                    "example": "5ed3fdwe234cdsf234dsa"
                },
                "status": {
                    "type": "string",
                    "example": "'APPROVED', 'DECLINED', 'REVOKED'"
                }
            }
        }
    },

    "response": {
        "user-posts": {
            "properties": {
                "_id": {
                    "type": "string",
                    "example": "5ed3fdwe234cdsf234dsa"
                },
                "name": { 
                    "type": "string",
                    "example": "Men" 
                },
                "postingType": { 
                    "type": "string",
                    "example": "GROUP/INDIVIDUAL" 
                },
                "content": { 
                    "type": "string",
                    "example": "Anything" 
                },
                "type": { 
                    "type": "string", 
                    "example": "TEXT/IMAGE/VIDEO"
                }
            }
        },
        "post-review": {
            "properties": {
                "_id": {
                    "type": "string",
                    "example": "5ed3fdwe234cdsf234dsa"
                },
                "product": { 
                    "type": "string",
                    "example": "6203faae6a34645934dda722" 
                },
                "service": { 
                    "type": "string",
                    "example": "6203faae6a34645934dda722" 
                },
                "rating": { 
                    "type": "number",
                    "example": 3.8 
                },
                "feedback": { 
                    "type": "string",
                    "example": "Anything" 
                },
                "comments": {
                    "properties": {
                        "comment": { 
                            "type": "string",
                            "example": "Anything" 
                        },
                        "commentedBy": { 
                            "type": "string",
                            "example": "User_id" 
                        }
                    }
                },
                "files": {
                    "type": "Multiple Files",
                    "example": "['aa.png', 'bb.png']"
                }
            }
        },
        "user-categories": {
            "properties": {
                "_id": {
                    "type": "string",
                    "example": "5ed3fdwe234cdsf234dsa"
                },
                "category": {
                    "properties": {
                        "name": { 
                            "type": "string",
                            "example": "Anything" 
                        },
                        "_id": { 
                            "type": "string",
                            "example": "5ed3fdwe234cdsf234dsa" 
                        }
                    }
                }
            }
        },
        "record-order": {
            "properties": {
                "_id": {
                    "type": "string",
                    "example": "5ed3fdwe234cdsf234dsa"
                },
                "products": {
                    "type": "string",
                    "example": "{}"
                },
                "services": {
                    "type": "string",
                    "example": "{}"
                },
                "status": {
                    "type": "String",
                    "example": "['Added', 'Pending', 'Processing', 'Completed']"
                },
                 "orderedBy": {
                    "type": "objectId",
                    "example": "objectId from user"
                },
                 "orderedTime": {
                    "type": "Number",
                    "example": "{}"
                },
                "orderedTo": {
                    "type": "String",
                    "example": "{}"
                },
                "orderedPrice": {
                    "type": "Number",
                    "example": "9999"
                },
                "transaction": {
                    "type": "objectId",
                    "example": "objectId from Transaction table"
                },
                "createdBy": {
                    "type": "objectId",
                    "example": "objectId from user table"
                },
                "updatedBy": {
                    "type": "objectId",
                    "example": "objectId from User table"
                }

            }
        },
        "create-wishlist": {
            "properties": {
                "favourites": {
                    "type": "array",
                    "example": "['6231e94a296e1c389ab8097e']"
                }
            }
        },
        "get-wishlist": {
            "properties": {
                "_id": {
                    "type": "string",
                    "example": "6231e94a296e1c389ab8097e"
                },
                "name": {
                    "type": "string",
                    "example": "product name"
                }
            }
        },
        "update-wishlist": {
            "properties": {
                "favourites": {
                    "type": "array",
                    "example": "['Send Remaining product id in array for update']"
                }
            }
        },
        "create-service": {
            "properties": {
                  "_id": {
                    "type": "string",
                    "example": "5ed3fdwe234cdsf234dsa"
                },
                "name": {
                    "type": "string",
                    "example": "Name"
                },
                "description": {
                    "type": "string",
                    "example": "description"
                },
                "category": {
                    "type": "objectId",
                    "example": "object ID from category table"
                },
                 "tags": {
                    "type": "array",
                    "example": "objectId from tags"
                },
                 "active": {
                    "type": "Boolean",
                    "example": "object ID from category table"
                },
                "createdBy": {
                    "type": "objectId",
                    "example": "object ID from User table"
                },
                "updatedBy": {
                    "type": "objectId",
                    "example": "object ID from User table"
                },
                "file": {
                    "type": "string",
                    "example": "image"
                }

            }
        },
        "record-service": {
            "properties": {
                  "_id": {
                    "type": "string",
                    "example": "5ed3fdwe234cdsf234dsa"
                },
                "name": {
                    "type": "string",
                    "example": "Name"
                },
                "description": {
                    "type": "string",
                    "example": "description"
                },
                "category": {
                    "type": "objectId",
                    "example": "object ID from category table"
                },
                 "tags": {
                    "type": "array",
                    "example": "objectId from tags"
                },
                 "active": {
                    "type": "Boolean",
                    "example": "object ID from category table"
                },
                "createdBy": {
                    "type": "objectId",
                    "example": "object ID from User table"
                },
                "updatedBy": {
                    "type": "objectId",
                    "example": "object ID from User table"
                },
                "file": {
                    "type": "string",
                    "example": "image"
                }

            }
        },
        "create-connections": {
            "properties": {
                  "_id": {
                    "type": "string",
                    "example": "5ed3fdwe234cdsf234dsa"
                },
                "requestedTo": {
                    "type": "string",
                    "example": "Object id from user table"
                }
               
        
            }
        },
        "record-connections": {
            "properties": {
                  "_id": {
                    "type": "string",
                    "example": "5ed3fdwe234cdsf234dsa"
                },
                "requestedTo": {
                    "type": "string",
                    "example": "Object id from user table"
                },
                "status": {
                    "type": "string",
                    "example": "'REQUESTED', 'APPROVED', 'DECLINED', 'REVOKED'"
                }
            }
        },
        "create-service-enquiry": {
            "properties": {
                  "_id": {
                    "type": "string",
                    "example": "5ed3fdwe234cdsf234dsa"
                },
                "name": {
                    "type": "string",
                    "example": "Name"
                },
                "email": {
                    "type": "string",
                    "example": "email Address"
                },
                "phone": {
                    "type": "string",
                    "example": "Phone Number"
                },
                "message": {
                    "type": "string",
                    "example": "Message"
                },
                "service": {
                    "type": "objectId",
                    "example": "object ID from service table"
                }
                

            }
        },
        "record-service-enquiry": {
            "properties": {
                  "_id": {
                    "type": "string",
                    "example": "5ed3fdwe234cdsf234dsa"
                },
                "name": {
                    "type": "string",
                    "example": "Name"
                },
                "email": {
                    "type": "string",
                    "example": "email address"
                },
                "phone": {
                    "type": "string",
                    "example": "phone number"
                },
                "message": {
                    "type": "string",
                    "example": "message"
                },
                "service": {
                    "type": "objectId",
                    "example": "object ID from service table"
                }
               

            }
        },
        "create-tags": {
            "properties": {
                  "_id": {
                    "type": "string",
                    "example": "5ed3fdwe234cdsf234dsa"
                },
                "name": {
                    "type": "string",
                    "example": "Tag Name"
                },
                "code": {
                    "type": "string",
                    "example": "code"
                }
            }
        },
        "record-tags": {
            "properties": {
                  "_id": {
                    "type": "string",
                    "example": "5ed3fdwe234cdsf234dsa"
                },
                "name": {
                    "type": "string",
                    "example": "Tag Name"
                },
                "code": {
                    "type": "string",
                    "example": "code"
                }
            }
        },
        "create-help": {
            "properties": {
                  "_id": {
                    "type": "string",
                    "example": "5ed3fdwe234cdsf234dsa"
                },
                "name": {
                    "type": "string",
                    "example": "Name"
                },
                "phone": {
                    "type": "string",
                    "example": "9874563210"
                },
                "email": {
                    "type": "string",
                    "example": "test@gmail.com"
                },
                "concern": {
                    "type": "string",
                    "example": "Message"
                }

            }
        },
        "record-help":{
            "properties": {
                  "_id": {
                    "type": "string",
                    "example": "5ed3fdwe234cdsf234dsa"
                },
                "name": {
                    "type": "string",
                    "example": "Name"
                },
                "phone": {
                    "type": "string",
                    "example": "9874563210"
                },
                "email": {
                    "type": "string",
                    "example": "test@gmail.com"
                },
                "concern": {
                    "type": "string",
                    "example": "Message"
                }

            }
        },
        "user-login": {
            "properties": {
                "status": {
                    "type": "string",
                    "example": "SUCCESS!"
                },
                "result": {
                    "type": "object",
                    "properties": {
                        "_id": {
                            "type": "string",
                            "example": "5f8a1861d475195bdf22c73d"
                        },
                        "email": {
                            "type": "string",
                            "example": "admin@gmail.com"
                        },
                        "phoneNumber": {
                            "type": "number",
                            "example": 1234567890
                        },
                        "role": {
                            "type": "number",
                            "example": 2
                        },
                        "firstName": {
                            "type": "string",
                            "example": "EMS"
                        },
                        "lastName": {
                            "type": "string",
                            "example": "Chief"
                        },
                        "active": {
                            "type": "boolean",
                            "example": true
                        },
                        "firstLogin": {
                            "type": "boolean",
                            "example": true
                        },
                        "token": {
                            "type": "string",
                            "example": "easfe5f8a1861d475195b.5f8a1861d47519afsafew323ccd3261d475195bdf22c73d"
                        }
                    }
                }
            }
        },
        "mobile-login": {
            "properties": {
                "status": {
                    "type": "string",
                    "example": "SUCCESS!"
                },
                "result": {
                    "type": "string",
                    "example": "OTP Sent successfully, please check your phone."
                }
            }
        },
        "create-attribute": {
            "properties": {
                "_id": { 
                    "type": "string",
                    "example": "6203faae6a34645934dda722" 
                },
                "name": { 
                    "type": "string",
                    "example": "Size" 
                },
                "list": {
                    "type": "Multiple Files",
                    "example": "['XL', 'L', 'S']"
                },
                "category": { 
                    "type": "string",
                    "example": "6203faae6a34645934dda722" 
                },
                "active": { 
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "user-list": {
            "properties": {
                "status": {
                    "type": "string",
                    "example": "SUCCESS!"
                },
                "result": {
                    "type": "object",
                    "properties": {
                        "_id": {
                            "type": "string",
                            "example": "5f8a1861d475195bdf22c73d"
                        },
                        "email": {
                            "type": "string",
                            "example": "admin@gmail.com"
                        },
                        "phoneNumber": {
                            "type": "number",
                            "example": 1234567890
                        },
                        "role": {
                            "type": "number",
                            "example": 2
                        },
                        "firstName": {
                            "type": "string",
                            "example": "EMS"
                        },
                        "lastName": {
                            "type": "string",
                            "example": "Chief"
                        },
                        "active": {
                            "type": "boolean",
                            "example": true
                        },
                        "firstLogin": {
                            "type": "boolean",
                            "example": true
                        }
                    }
                }
            }
        },
        "upload-user-profile": {
            "properties": {
                "status": {
                    "type": "string",
                    "example": "SUCCESS!"
                },
                "result": {
                    "type": "string",
                    "example": "https://fileurl.com"
                }
            }
        },
        "create-category": {
            "properties": {
                "status": {
                    "type": "string",
                    "example": "SUCCESS!"
                },
                "result": {
                    "type": "object",
                    "properties": {
                        "_id": {
                            "type": "string",
                            "example": "5f8a29b4ed2e4f648e37c631"
                        },
                        "name": { 
                                "type": "string",
                                "example": "Men" 
                            },
                        "type": { 
                            "type": "string",
                            "example": "kurta" 
                        },
                        "commision": { 
                            "type": "string",
                            "example": 20 
                        },
                        "commisionType": { 
                            "type": "string", 
                            "example": "Bronze"
                        },
                        "active": { 
                            "type": "Boolean",
                            "example": true
                        },
                        "createdAt": { 
                            "type": "string",
                            "example": "2022-02-08T15:06:50.591Z" 
                        },
                        "updatedAt": { 
                            "type": "string",
                            "example": "2022-02-08T15:06:50.591Z" 
                        }

                    }
                }
            }

        },
        "create-subcategory": {
            "properties": {
                "status": {
                    "type": "string",
                    "example": "SUCCESS!"
                },
                "result": {
                    "type": "object",
                    "properties": {
                        "_id": {
                            "type": "string",
                            "example": "5f8a29b4ed2e4f648e37c631"
                        },
                        "name": { 
                                "type": "string",
                                "example": "Men" 
                            },
                        "active": { 
                            "type": "Boolean",
                            "example": true
                        },
                        "createdAt": { 
                            "type": "string",
                            "example": "2022-02-08T15:06:50.591Z" 
                        },
                        "updatedAt": { 
                            "type": "string",
                            "example": "2022-02-08T15:06:50.591Z" 
                        }

                    }
                }
            }

        },
        "create-notification": {
            "properties": {
                "_id": {
                    "type": "string",
                    "example": "5ed3fdwe234cdsf234dsa"
                },
                "type": {
                    "type": "string",
                    "example": "CALL"
                },
                "device": {
                    "type": "string",
                    "example": "['MOBILE', 'DESKTOP']"
                },
                "message": {
                    "type": "string",
                    "example": "Message what we to sent on devices"
                },
                "userId": {
                    "type": "string",
                    "example": "sd23423asf2saf232sfas"
                }
            }
        },
        "create-log": {
            "properties": {
                "_id": {
                    "type": "string",
                    "example": "5ed3fdwe234cdsf234dsa"
                },
                "type": {
                    "type": "string",
                    "example": "VOICE_CALL"
                },
                "device": {
                    "type": "string",
                    "example": "MOBILE"
                },
                "duration": {
                    "type": "number",
                    "example": 30
                },
                "userId": {
                    "type": "string",
                    "example": "sd23423asf2saf232sfas"
                }
            }
        },
        "create-discount": {
            "properties": {
                "_id": {
                    "type": "string",
                    "example": "5ed3fdwe234cdsf234dsa"
                },
                "couponName": {
                    "type": "string",
                    "example": "10 Rs Promo"
                },
                "couponCode": {
                    "type": "string",
                    "example": "PROMO10"
                },
                "discountType": {
                    "type": "string",
                    "example": "description"
                },
                "value": {
                    "type": "number",
                    "example": "10"
                },
                 "minValue": {
                    "type": "number",
                    "example": "100"
                },                 
                "startDate": {
                    "type": "Number",
                    "example": "1644504950000"
                },
                "endDate": {
                    "type": "Number",
                    "example": "1644504950000"
                },
                "products": {
                    "type": "Array of objectId from product",
                    "example": "[62029e5b110c0ceb181f3a3b, 62029e5b110c0ceb181f3a3b]"
                },
                "services": {
                    "type": "Array of objectId from services",
                    "example": "[62029e5b110c0ceb181f3a3b, 62029e5b110c0ceb181f3a3b]"
                },
                "active": {
                    "type": "Boolean",
                    "example": "true"
                },
                "createdBy": {
                    "type": "object ID from User table",
                    "example": "62029e5b110c0ceb181f3a3b"
                },
                "updatedBy": {
                    "type": "object ID from User table",
                    "example": "62029e5b110c0ceb181f3a3b"
                }                
            }
        },
        "create-product": {
            "properties": {
                  "_id": {
                    "type": "string",
                    "example": "5ed3fdwe234cdsf234dsa"
                },
                "name": {
                    "type": "string",
                    "example": "Product"
                },
                "description": {
                    "type": "Description",
                    "example": "Product description"
                },
                "price": {
                    "type": "number",
                    "example": "10"
                },
                "specialPrice" : {
                    "type": "number",
                    "example": "10"
                },
                "specialPriceStartDate" : {
                    "type": "Number",
                    "example": "1644504950000"
                },
                "specialPriceEndDate" : {
                    "type": "Number",
                    "example": "1644504950000"
                },                
                "files": {
                    "type": "Multiple Files",
                    "example": "['aa.png', 'bb.png']"
                },                                 
                "category": {
                    "type": "objectId of Category",
                    "example": "61ff7a8c85cb8a97193e4386"
                },
                "subCategory": {
                    "type": "objectId of subCategory",
                    "example": "61ff7a8c85cb8a97193e4386"
                },
                "attributes": {
                    "type": "Array of Attribute object",
                    "example": "[{ '_id': '620a3c48bdd31927e0fa2c95', 'type':'Color', 'value': 'Red'}, ...]"
                },
                "active": {
                    "type": "Boolean",
                    "example": "true"
                }                 
            }
        },
        "create-group": {
            "properties": {   
				"_id": {
                    "type": "string",
                    "example": "5ed3fdwe234cdsf234dsa"
                },
                "name": {
                    "type": "string",
                    "example": "Awesome Group"
                },             
                "users": {
                    "type": "array",
                    "example": "['6231e94a296e1c389ab8097e']"
                },
                "pendingRequest": {
                    "type": "array",
                    "example": "['6231e94a296e1c389ab8097e']"
                },
                "posts": {
                    "type": "array",
                    "example": "['6231e94a296e1c389ab8097e']"
                },
				"createdBy": {
                    "type": "object ID from User table",
                    "example": "62029e5b110c0ceb181f3a3b"
                },
                "updatedBy": {
                    "type": "object ID from User table",
                    "example": "62029e5b110c0ceb181f3a3b"
                }            
            }
        }
    }
}
